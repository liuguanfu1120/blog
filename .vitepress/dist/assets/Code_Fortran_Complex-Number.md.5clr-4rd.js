import{_ as a,o as e,c as s,R as n}from"./chunks/framework.NgETwM1V.js";const b=JSON.parse('{"title":"基本用法","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"Code/Fortran/Complex-Number.md","filePath":"Code/Fortran/Complex-Number.md"}'),r={name:"Code/Fortran/Complex-Number.md"},p=n(`<h1 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h1><h2 id="取实部" tabindex="-1">取实部 <a class="header-anchor" href="#取实部" aria-label="Permalink to &quot;取实部&quot;">​</a></h2><p>用<strong>DBLE</strong>函数，不需要指定kind</p><h2 id="取虚部" tabindex="-1">取虚部 <a class="header-anchor" href="#取虚部" aria-label="Permalink to &quot;取虚部&quot;">​</a></h2><p>用<strong>AIMAG</strong>函数，不需要指定kind</p><h2 id="赋值" tabindex="-1">赋值 <a class="header-anchor" href="#赋值" aria-label="Permalink to &quot;赋值&quot;">​</a></h2><h3 id="cmplx" tabindex="-1">cmplx <a class="header-anchor" href="#cmplx" aria-label="Permalink to &quot;cmplx&quot;">​</a></h3><div class="language-fortran vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>RESULT = CMPLX(X [, Y [, KIND]])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>要指定kind，如果没有使用kind这个参数，即使X和Y的精度是双精度，最后也会变成<strong>单精度</strong>。</p><h3 id="complex" tabindex="-1">complex <a class="header-anchor" href="#complex" aria-label="Permalink to &quot;complex&quot;">​</a></h3><div class="language-fortran vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>RESULT = COMPLEX(X, Y)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>不需要指定kind</p><h3 id="在array-constructor中" tabindex="-1">在array constructor中 <a class="header-anchor" href="#在array-constructor中" aria-label="Permalink to &quot;在array constructor中&quot;">​</a></h3><div class="language-fortran vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>COMPLEX(KIND=DPC),DIMENSION(3)::c1</span></span>
<span class="line"><span>c1=[cmplx(1.0_dp,2.0_dp,kind=dpc), cmplx(1.0_dp,2.0_dp,kind=dpc), cmplx(1.0_dp,2.0_dp, kind=dpc)]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>使用双精度得指定kind。</p><div class="language-fortran vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>COMPLEX(KIND=DPC),DIMENSION(3)::c1</span></span>
<span class="line"><span>c1=[complex(1.0_dp,2.0_dp), complex(1.0_dp,2.0_dp), complex(1.0_dp,2.0_dp)]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>上面的这种情况会报错，因为<strong>complex</strong>本身还可以是array constructor里面申明类型的语句，所以应该这样写：</p><div class="language-fortran vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">fortran</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>COMPLEX(KIND=DPC),DIMENSION(3)::c1</span></span>
<span class="line"><span>c1=[complex(kind=dpc)::complex(1.0_dp,2.0_dp), complex(1.0_dp,2.0_dp), complex(1.0_dp,2.0_dp)]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,18),t=[p];function i(l,o,d,c,h,m){return e(),s("div",null,t)}const _=a(r,[["render",i]]);export{b as __pageData,_ as default};
