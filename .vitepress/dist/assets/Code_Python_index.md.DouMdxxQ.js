import{_ as t,o as a,c as e,R as n}from"./chunks/framework.NgETwM1V.js";const P=JSON.parse('{"title":"Python index","description":"","frontmatter":{"prev":false,"next":{"text":"Fortran","link":"/Code/Fortran/index"}},"headers":[],"relativePath":"Code/Python/index.md","filePath":"Code/Python/index.md"}'),o={name:"Code/Python/index.md"},r=n('<h1 id="python-index" tabindex="-1">Python index <a class="header-anchor" href="#python-index" aria-label="Permalink to &quot;Python index&quot;">​</a></h1><h2 id="connection-between-python-and-fortran" tabindex="-1">Connection between Python and Fortran <a class="header-anchor" href="#connection-between-python-and-fortran" aria-label="Permalink to &quot;Connection between Python and Fortran&quot;">​</a></h2><p><a href="./Python-Fortran-Z.html">Pass complex </a>numbers<a href="./Python-Fortran-Z.html"> between Python</a> and Fortran](Python-Fortran-Z.md)</p><h2 id="matplotlib-tips" tabindex="-1">Matplotlib tips <a class="header-anchor" href="#matplotlib-tips" aria-label="Permalink to &quot;Matplotlib tips&quot;">​</a></h2><p><a href="./Secondary-Axes.html">Plot secondary axes with Matplotlib</a></p><p>You may need to let the bottom x-axis show the frequency and the top one display the wavelength, which this Python script can help.</p><p><a href="./Matplotlib.html">More tips about Matplotlib</a></p><h2 id="pandas-tips" tabindex="-1">Pandas tips <a class="header-anchor" href="#pandas-tips" aria-label="Permalink to &quot;Pandas tips&quot;">​</a></h2><p><a href="./Pandas.html">Pandas tips</a></p><h2 id="numpy-tips" tabindex="-1">Numpy tips <a class="header-anchor" href="#numpy-tips" aria-label="Permalink to &quot;Numpy tips&quot;">​</a></h2><p><a href="./Numpy.html">Numpy tips</a></p>',11),i=[r];function h(s,p,d,l,c,m){return a(),e("div",null,i)}const _=t(o,[["render",h]]);export{P as __pageData,_ as default};
